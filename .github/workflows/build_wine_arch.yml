name: Build wine for specific architecture

on:
  workflow_call:
    inputs:
      wine_arch:
        description: "Wine image architecture"
        required: true
        type: string
      wine_interpreter:
        description: "Wine dynamic interpreter path"
        type: string
      run_environment:
        description: "Name of environment where wine runs"
        default: "generic"
        type: string
    outputs:
      wine_artifact_name:
        description: Artifact name
        value: ${{ jobs.build.outputs.wine_artifact_name }}
      wine_branch:
        description: Wine branch name
        value: ${{ jobs.build.outputs.wine_branch }}
      wine_patches:
        description: Name of applied patches to wine(staging, stable, etc)
        value: ${{ jobs.build.outputs.wine_patches }}
      wine_arch:
        description: Wine image architecture
        value: ${{ jobs.build.outputs.wine_arch }}

  workflow_dispatch:
    inputs:
      wine_repo:
        description: Wine git repo that used for build
        required: true
        type: string
      wine_tag:
        description: "Wine tag that used for build"
        default: "main"
        type: string
      wine_branch:
        description: "Wine branch name"
        default: "stable"
        type: string
      wine_patches:
        description: "Name of applied patches to Wine"
        type: string
      wine_arch:
        description: "Wine image architecture"
        required: true
        type: string
      wine_interpreter:
        description: "Wine dynamic interpreter path"
        type: string
      run_environment:
        description: "Name of environment where wine runs"
        default: "generic"
        type: string

jobs:
  build:
    runs-on: ubuntu-24.04
    outputs:
      wine_artifact_name: ${{ steps.extract-info.outputs.wine_artifact_name }}
      wine_branch: ${{ steps.extract-info.outputs.wine_branch }}
      wine_patches: ${{ steps.extract-info.outputs.wine_patches }}
      wine_arch: ${{ steps.extract-info.outputs.wine_arch }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Extract info from tag
        id: extract-info
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            WINE_REPO="${{ github.event.inputs.wine_repo }}"
            WINE_TAG="${{ github.event.inputs.wine_tag }}"
            WINE_BRANCH="${{ github.event.inputs.wine_branch }}"
            WINE_PATCHES="${{ github.event.inputs.wine_patches }}"
            WINE_ARCH="${{ github.event.inputs.wine_arch }}"
            WINE_INTERPRETER_PATH="${{ github.event.inputs.wine_interpreter }}"
            RUN_ENVIRONMENT="${{ github.event.inputs.run_environment }}"
          else
            WINE_REPO="${{ github.repository }}"
            WINE_TAG="${{ github.ref_name }}" # todo: correctly handle pull requests

            case "${WINE_TAG}" in
              wine-*-*-v*) 
                WINE_BRANCH=$(echo "${WINE_TAG}" | cut -d'-' -f2)
                WINE_PATCHES=$(echo "${WINE_TAG}" | cut -d'-' -f3)

                if [ -z "$WINE_PATCHES" ]; then
                  WINE_PATCHES=""
                fi
                ;;
              wine-*-v*) 
                WINE_BRANCH=$(echo "${WINE_TAG}" | cut -d'-' -f2)
                WINE_PATCHES=""
                ;;
              wine-*-*)
                WINE_BRANCH=$(echo "${WINE_TAG}" | cut -d'-' -f2)
                WINE_PATCHES=$(echo "${WINE_TAG}" | cut -d'-' -f3)

                if [ -z "$WINE_PATCHES" ]; then
                  WINE_PATCHES=""
                fi
                ;;
              wine-*)
                WINE_BRANCH=$(echo "${WINE_TAG}" | cut -d'-' -f2)
                WINE_PATCHES=""
                ;;
              *)
                echo "Unknown wine tag format: ${WINE_TAG}"
                exit 1
                ;;
            esac
            
            WINE_ARCH="${{ inputs.wine_arch }}"
            WINE_INTERPRETER_PATH="${{ inputs.wine_interpreter }}"
            RUN_ENVIRONMENT="${{ inputs.run_environment }}"
          fi
          
          echo "WINE_REPO=$WINE_REPO" >> $GITHUB_ENV
          echo "WINE_TAG=$WINE_TAG" >> $GITHUB_ENV
          echo "WINE_BRANCH=$WINE_BRANCH" >> $GITHUB_ENV
          echo "WINE_PATCHES=$WINE_PATCHES" >> $GITHUB_ENV
          echo "WINE_ARCH=$WINE_ARCH" >> $GITHUB_ENV
          echo "WINE_INTERPRETER_PATH=$WINE_INTERPRETER_PATH" >> $GITHUB_ENV
          echo "RUN_ENVIRONMENT=$RUN_ENVIRONMENT" >> $GITHUB_ENV

          WINE_ARTIFACT_NAME="wine-${RUN_ENVIRONMENT}-${WINE_BRANCH}-${WINE_ARCH}"
          echo "WINE_ARTIFACT_NAME=${WINE_ARTIFACT_NAME}" >> $GITHUB_ENV

          echo "wine_branch=$WINE_BRANCH" >> $GITHUB_OUTPUT
          echo "wine_patches=$WINE_PATCHES" >> $GITHUB_OUTPUT
          echo "wine_arch=$WINE_ARCH" >> $GITHUB_OUTPUT
          echo "wine_artifact_name=$WINE_ARTIFACT_NAME" >> $GITHUB_OUTPUT
      - name: Checkout wine repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.WINE_REPO }}
          ref: ${{ env.WINE_TAG }}
          path: wine
      - name: Download builder rootfs artifact
        uses: dawidd6/action-download-artifact@v9
        with: 
          workflow: build_env.yml
          workflow_conclusion: success
          path: ${{ runner.temp }}
          name: Builder rootfs images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Load builder image
        run: |
          docker load --input ${{ runner.temp }}/wine_builder_rootfs.tar.xz
      - name: Run build container
        run: >
          docker run --name builder 
          -v ${{ github.workspace }}:/workdir 
          -e WINE_ARCH=${{ env.WINE_ARCH }} -e WINE_TAG=${{ env.WINE_TAG }} 
          -e WINE_BRANCH=${{ env.WINE_BRANCH }} -e WINE_PATCHES=${{ env.WINE_PATCHES }}
          -e WINE_INTERPRETER_PATH=${{ env.WINE_INTERPRETER_PATH }}
          -e RUN_ENVIRONMENT=${{ env.RUN_ENVIRONMENT }}
          wine_builder_rootfs
      - name: Upload configuration log if configuration fails
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.WINE_TAG }}-${{ env.WINE_BRANCH }}-${{ env.WINE_ARCH }}-config.log
          path: ./wine-build/build-${{ env.WINE_TAG }}-${{ env.WINE_ARCH }}/config.log
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: ${{ env.WINE_ARTIFACT_NAME }}
          path: ./prefix-${{ env.RUN_ENVIRONMENT }}-${{ env.WINE_TAG }}-${{ env.WINE_ARCH }}
